{"version":3,"sources":["components/Snake.js","components/Food.js","components/Snake1Player.js","components/Snake2Player.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["Snake","snakeDots","pixelstyle","map","dot","i","style","left","top","className","Food","getRandomCoordiates","Math","floor","random","initialState","snakeFood","speed","direction","score","gameStart","Snake1Player","props","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","bind","document","onkeydown","this","setInterval","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","clearInterval","onGameOver","snake","pop","forEach","food","growSnake","raiseSpeed","newSnake","unshift","alert","onClick","Component","player1","player2","App2Player","prevState","dots1","head1","dots2","head2","snake1","snake2","player","console","log","Landing","to","App","exact","path","component","Snake2Player","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42d49e21.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Snake = ({snakeDots, pixelstyle}) => {\n    return(\n        <div>\n            {snakeDots.map((dot,i) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`,\n                }\n                return(\n                    <div className={pixelstyle} key={i} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Snake","import React from 'react';\n\nconst Food = ({dot,pixelstyle}) => {\n    return(\n        <div className={pixelstyle} style={{\n            left: `${dot[0]}%`,\n            top: `${dot[1]}%`\n        }}>\n        </div>\n    )\n}\n\nexport default Food","import React, {Component} from 'react'\nimport Snake from './Snake';\nimport Food from './Food';\n\nconst getRandomCoordiates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor(((Math.random()*(max-min+1)+min)/2))*2;\n  let y = Math.floor(((Math.random()*(max-min+1)+min)/2))*2;\n  return [x,y];\n}\n\nconst initialState ={\n  snakeFood: getRandomCoordiates(),\n  speed: 50,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ],\n  score: 0,\n  gameStart: false\n}\n\nclass Snake1Player extends Component {\n  constructor(props){\n    super(props);\n    this.gameStart = this.gameStart.bind(this);\n  }\n  state = initialState\n\n  componentDidMount(){\n    document.onkeydown = this.onKeyDown;\n  }\n\n  gameStart(){\n    this.gameStart = setInterval(() => {\n      this.moveSnake()\n    }, this.state.speed);\n  }\n\n  componentDidUpdate(){\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n  componentWillUnmount() {\n    clearInterval(this.gameStart);\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode){\n      case 38:\n        if(this.state.direction !== 'DOWN')this.setState({direction:'UP'});\n        break;\n      case 40:\n        if(this.state.direction !== 'UP')this.setState({direction:'DOWN'});\n        break;\n      case 37:\n        if(this.state.direction !== 'RIGHT')this.setState({direction:'LEFT'});\n        break;\n      case 39:\n        if(this.state.direction !== 'LEFT')this.setState({direction:'RIGHT'});\n        break;\n      case 83:\n        if(this.state.direction !== 'DOWN')this.setState({direction:'UP'});\n        break;\n      case 87:\n        if(this.state.direction !== 'UP')this.setState({direction:'DOWN'});\n        break;\n      case 68:\n        if(this.state.direction !== 'RIGHT')this.setState({direction:'LEFT'});\n        break;\n      case 65:\n        if(this.state.direction !== 'LEFT')this.setState({direction:'RIGHT'});\n        break;\n    }\n  }\n\n  checkIfOutOfBorders(){\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1]<0){\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed(){\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length-1];\n    snake.pop();\n    snake.forEach(dot => {\n      if(head[0] === dot[0] && head[1] === dot[1]){\n        this.onGameOver();\n      }\n    })\n  }\n\n  checkIfEat(){\n    let head = this.state.snakeDots[this.state.snakeDots.length -1];\n    let food = this.state.snakeFood;\n    if(head[0] === food[0] && head[1] === food[1]){\n      this.setState({\n        snakeFood:getRandomCoordiates()\n      });\n      this.growSnake();\n      this.raiseSpeed();\n    }\n  }\n\n  growSnake(){\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake,\n      score: this.state.score + 1\n    })\n  }\n\n  raiseSpeed(){\n    if(this.state.speed > 10){\n      this.setState({speed: this.state.speed - 2});\n    }\n  }  \n\n  onGameOver(){\n    alert(`GameOver: you got me ${this.state.score} times <3`);\n    this.setState(initialState);\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        break;\n    }\n\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots:dots\n    })\n  }\n\n  render(){\n    return (\n    <>\n      <div className=\"Snake1Player game-area\">\n        <Snake snakeDots={this.state.snakeDots} pixelstyle={\"snake-dot\"}></Snake>\n        <Food dot={this.state.snakeFood} pixelstyle={\"snake-food\"}></Food>\n      </div>\n      <button onClick={this.gameStart}>Start</button>\n    </>\n    );\n  }\n}\n\nexport default Snake1Player;\n","import React, {Component} from 'react'\nimport Snake from './Snake';\nimport Food from './Food';\n\nconst getRandomCoordiates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor(((Math.random()*(max-min+1)+min)/2))*2;\n  let y = Math.floor(((Math.random()*(max-min+1)+min)/2))*2;\n  return [x,y];\n}\n\nconst initialState ={\n    player1: {\n        snakeFood: getRandomCoordiates(),\n        speed: 100,\n        direction: 'RIGHT',\n        snakeDots: [\n          [0,0],\n          [2,0]\n        ],\n        score: 0,\n        gameStart: false\n    },\n    player2: {\n        snakeFood: getRandomCoordiates(),\n        speed: 100,\n        direction: 'RIGHT',\n        snakeDots: [\n          [6,6],\n          [6,8]\n        ],\n        score: 0,\n        gameStart: false\n    }\n}\n\nclass App2Player extends Component {\n  constructor(props){\n    super(props);\n    this.gameStart = this.gameStart.bind(this);\n  }\n  state = initialState\n\n  componentDidMount(){\n    document.onkeydown = this.onKeyDown;\n  }\n\n  gameStart(){\n    this.gameStart = setInterval(() => {\n      this.moveSnake()\n    }, this.state.player1.speed);\n  }\n\n  componentDidUpdate(){\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat(1);\n    this.checkIfEat(2);\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode){\n      case 38:\n        if(this.state.player1.direction !== 'DOWN'){\n            this.setState(prevState => ({\n                player1: {                   // object that we want to update\n                    ...prevState.player1,    // keep all other key-value pairs\n                    direction:'UP'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 40:\n        if(this.state.player1.direction !== 'UP'){\n            this.setState(prevState => ({\n                player1: {                   // object that we want to update\n                    ...prevState.player1,    // keep all other key-value pairs\n                    direction:'DOWN'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 37:\n        if(this.state.player1.direction !== 'RIGHT'){\n            this.setState(prevState => ({\n                player1: {                   // object that we want to update\n                    ...prevState.player1,    // keep all other key-value pairs\n                    direction:'LEFT'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 39:\n        if(this.state.player1.direction !== 'LEFT'){\n            this.setState(prevState => ({\n                player1: {                   // object that we want to update\n                    ...prevState.player1,    // keep all other key-value pairs\n                    direction:'RIGHT'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 83:\n        if(this.state.player2.direction !== 'UP'){\n            this.setState(prevState => ({\n                player2: {                   // object that we want to update\n                    ...prevState.player2,    // keep all other key-value pairs\n                    direction:'DOWN'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 87:\n        if(this.state.player2.direction !== 'DOWN'){\n            this.setState(prevState => ({\n                player2: {                   // object that we want to update\n                    ...prevState.player2,    // keep all other key-value pairs\n                    direction:'UP'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 68:\n        if(this.state.player2.direction !== 'LEFT'){\n            this.setState(prevState => ({\n                player2: {                   // object that we want to update\n                    ...prevState.player2,    // keep all other key-value pairs\n                    direction:'RIGHT'     // update the value of specific key\n                }\n              }));}\n        break;\n      case 65:\n        if(this.state.player2.direction !== 'RIGHT'){\n            this.setState(prevState => ({\n                player2: {                   // object that we want to update\n                    ...prevState.player2,    // keep all other key-value pairs\n                    direction:'LEFT'     // update the value of specific key\n                }\n              }));}\n        break;\n    }\n  }\n\n  checkIfOutOfBorders(){\n    let head = this.state.player1.snakeDots[this.state.player1.snakeDots.length - 1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1]<0){\n      //this.onGameOver(1);\n    }\n    head = this.state.player2.snakeDots[this.state.player1.snakeDots.length - 1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1]<0){\n      this.onGameOver(2);\n    }\n  }\n\n  checkIfCollapsed(){\n    let snake1 = [...this.state.player1.snakeDots];\n    let snake2 = [...this.state.player2.snakeDots];\n    let head1 = snake1[snake1.length-1];\n    let head2 = snake2[snake2.length-1];\n\n    snake1.pop();\n    snake2.pop();\n    let body = [...snake1,...snake2];\n    body.forEach(dot => {\n      if(head1[0] === dot[0] && head1[1] === dot[1]){\n        //this.onGameOver(1);\n      }\n      if(head2[0] === dot[0] && head2[1] === dot[1]){\n        this.onGameOver(2);\n      }\n    })\n  }\n\n  checkIfEat(player){\n      if(player == 1){\n\n        let head1 = this.state.player1.snakeDots[this.state.player1.snakeDots.length -1];\n        let food = this.state.player1.snakeFood;\n        if(head1[0] === food[0] && head1[1] === food[1]){\n          this.setState(prevState => ({\n            player1: {                   // object that we want to update\n                ...prevState.player1,    // keep all other key-value pairs\n                snakeFood:getRandomCoordiates()      // update the value of specific key\n            }\n          }));\n        \n          this.growSnake(1);\n          this.raiseSpeed(1);\n        }\n      }\n      else{\n\n        let head2 = this.state.player2.snakeDots[this.state.player2.snakeDots.length -1];\n        let food = this.state.player1.snakeFood;\n\n        if(head2[0] === food[0] && head2[1] === food[1]){\n          this.setState(prevState => ({\n            player1: {                   // object that we want to update\n                ...prevState.player1,    // keep all other key-value pairs\n                snakeFood:getRandomCoordiates()      // update the value of specific key\n            }\n          }));\n        \n          this.growSnake(2);\n          this.raiseSpeed(2);\n        }\n      }\n  }\n\n  growSnake(player){\n      if(player == 1){\n        let newSnake = [...this.state.player1.snakeDots];\n        newSnake.unshift([]);\n        this.setState(prevState => ({\n            player1: {                   \n                ...prevState.player1,   \n                snakeDots: newSnake,\n                score: this.state.player1.score + 1     \n            }\n          }));\n      }\n      else{\n\n        let newSnake = [...this.state.player2.snakeDots];\n        newSnake.unshift([]);\n        console.log(newSnake);\n        this.setState(prevState => ({\n            player2: {                   \n                ...prevState.player2,   \n                snakeDots: newSnake,\n                score: this.state.player2.score + 1     \n            }\n        }));\n      }\n  }\n\n  raiseSpeed(player){\n      if(player == 1){\n\n        if(this.state.player1.speed > 10){\n            this.setState(prevState => ({\n                player1: {                   \n                    ...prevState.player1,   \n                    speed: this.state.player1.speed - 10   \n                }\n              }));\n        }\n      }\n    else{\n        if(this.state.player2.speed > 10){\n            this.setState(prevState => ({\n                player2: {                   \n                    ...prevState.player2,   \n                    speed: this.state.player2.speed - 10   \n                }\n              }));\n        }\n    }\n  }  \n\n  onGameOver(player){\n    alert(`GameOver: player ${player} lost`);\n    this.setState(initialState);\n  }\n\n  moveSnake = () => {\n    let dots1 = [...this.state.player1.snakeDots];\n    let head1 = dots1[dots1.length - 1];\n    let dots2 = [...this.state.player2.snakeDots];\n    let head2 = dots2[dots2.length - 1];\n\n    switch (this.state.player2.direction) {\n        case 'RIGHT':\n            head2 = [head2[0] + 2, head2[1]];\n            break;\n        case 'LEFT':\n            head2 = [head2[0] - 2, head2[1]];\n            break;\n        case 'DOWN':\n            head2 = [head2[0], head2[1] + 2];\n            break;\n        case 'UP':\n            head2 = [head2[0], head2[1] - 2];\n            break;\n        }\n    \n    dots2.push(head2);\n    dots2.shift();\n    this.setState(prevState => ({\n        player2: {                   // object that we want to update\n            ...prevState.player2,    // keep all other key-value pairs\n            snakeDots:dots2     // update the value of specific key\n        }\n    }));\n    switch (this.state.player1.direction) {\n      case 'RIGHT':\n        head1 = [head1[0] + 2, head1[1]];\n        break;\n      case 'LEFT':\n        head1 = [head1[0] - 2, head1[1]];\n        break;\n      case 'DOWN':\n        head1 = [head1[0], head1[1] + 2];\n        break;\n      case 'UP':\n        head1 = [head1[0], head1[1] - 2];\n        break;\n    }\n\n    dots1.push(head1);\n    dots1.shift();\n    this.setState(prevState => ({\n        player1: {                   // object that we want to update\n            ...prevState.player1,    // keep all other key-value pairs\n            snakeDots:dots1     // update the value of specific key\n        }\n      }));\n\n  }\n\n  render(){\n    return (\n    <>\n      <div className=\"App game-area\">\n         {/* <Snake snakeDots={this.state.player1.snakeDots}></Snake>  */}\n        <Snake snakeDots={this.state.player2.snakeDots}></Snake>\n        <Food dot={this.state.player1.snakeFood}></Food>\n      </div>\n      <button onClick={this.gameStart}>Start</button>\n    </>\n    );\n  }\n}\n\nexport default App2Player;\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom';\n\n\nclass Landing extends Component {\n\n  render(){\n    return (\n    <div className=\"row container\">\n      <Link to={'/1p'} className=\"waves-effect waves-light btn-large offset-l3 col s6  initial_button\">\n          1 Player\n      </Link>\n      <Link to={'/2p'}  className=\"waves-effect waves-light btn-large offset-l3 col s6 initial_button\">\n          2 Player (unavailable currently)\n      </Link>\n      <Link to={'/jasjas'}  className=\"waves-effect waves-light btn-large offset-l3 col s6 initial_button\">\n          Jas player ;)\n      </Link>\n    </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, {Component} from 'react'\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Snake1Player from './components/Snake1Player';\nimport Snake2Player from './components/Snake2Player';\nimport Landing from './components/Landing';\n\n\nclass App extends Component {\n\n  render(){\n    return (\n    <>\n      <BrowserRouter>\n      <div>\n        <Route exact path=\"/\" component={Landing}/>\n        <Route exact path=\"/1p\" component={Snake1Player}/>\n        <Route exact path=\"/2p\" component={Snake2Player}/>\n      </div>\n      </BrowserRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}